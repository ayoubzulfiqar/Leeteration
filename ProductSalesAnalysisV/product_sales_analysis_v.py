```python
import pandas as pd

def analyze_product_sales(sales_data):
    """
    Analyzes product sales data to identify top-selling products and calculate relevant metrics.

    Args:
        sales_data (pd.DataFrame): DataFrame containing sales data with columns:
            - 'product_id' (int): Unique identifier for each product.
            - 'quantity' (int): Quantity of the product sold in a transaction.
            - 'price' (float): Price of the product.

    Returns:
        pd.DataFrame: DataFrame containing product-wise sales analysis with columns:
            - 'product_id' (int): Unique identifier for each product.
            - 'total_quantity_sold' (int): Total quantity of the product sold.
            - 'total_revenue' (float): Total revenue generated by the product.
            - 'average_price' (float): Average price of the product.
    """

    # Calculate total revenue for each transaction
    sales_data['revenue'] = sales_data['quantity'] * sales_data['price']

    # Group data by product_id and calculate aggregated metrics
    product_analysis = sales_data.groupby('product_id').agg(
        total_quantity_sold=('quantity', 'sum'),
        total_revenue=('revenue', 'sum'),
        average_price=('price', 'mean')
    ).reset_index()

    return product_analysis


if __name__ == '__main__':
    # Sample sales data (replace with your actual data)
    data = {'product_id': [1, 2, 1, 3, 2, 1, 3, 4],
            'quantity': [10, 5, 15, 7, 12, 8, 9, 6],
            'price': [25.0, 50.0, 25.0, 75.0, 50.0, 25.0, 75.0, 100.0]}
    sales_df = pd.DataFrame(data)

    # Analyze product sales
    product_sales_analysis = analyze_product_sales(sales_df)

    # Print the analysis results
    print(product_sales_analysis)
```